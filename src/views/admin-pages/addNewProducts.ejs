<!DOCTYPE HTML>
<html
    lang="en">
    <!-- Include Bootstrap CSS -->
    <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Include Cropper.js CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
    <style>
        #image-preview {
            display: flex;
            flex-wrap: wrap;
        }
        .preview-container {
            position: relative;
            width: 200px;
            height: 200px;
            border: 2px solid #ddd;
            border-radius: 5px;
            overflow: hidden;
            margin: 5px;
        }
        .preview-container img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        .remove-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background-color: rgba(255, 255, 255, 0.8);
            border: none;
            border-radius: 50%;
            padding: 5px;
            cursor: pointer;
        }
    </style>

    <%- include('./partials/head/head.ejs') %>

    <body>

        <div class="screen-overlay"></div>
        <aside class="navbar-aside" id="offcanvas_aside">
            <div class="aside-top">
                <a href="index.html" class="brand-wrap">
                    <img src="assets/imgs/theme/logo.svg" class="logo" alt="BuzzBrews & Chills">
                </a>
                <div>
                    <button class="btn btn-icon btn-aside-minimize">
                        <i class="text-muted material-icons md-menu_open"></i>
                    </button>
                </div>
            </div>
            <nav>
                <div class="menu-aside">

                    <a class="menu-link" href="/admin/dashboard">
                        <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                    <div class="menu-item">
                        <a class="menu-link" href="/admin/products">
                            <i class="icon material-icons md-shopping_bag"></i>
                            <span class="text">Products</span>
                        </a>
                    </div>
                    <div class="menu-item ">
                        <a class="menu-link" href="/admin/category">
                            <i class="icon material-icons md-shopping_bag"></i>
                            <span class="text">categories</span>
                        </a>
                    </div>
                    <div class="menu-item">
                        <a class="menu-link" href="/admin/orders">
                            <i class="icon material-icons md-shopping_cart"></i>
                            <span class="text">Orders</span>
                        </a>
                    </div>
                    <div class="menu-item">
                        <a class="menu-link" href="/admin/users-list">
                            <i class="icon material-icons md-person"></i>
                            <span class="text">Users</span>
                        </a>
                    </div>
                    <div class="menu-item active">
                        <a class="menu-link" href="/admin/add-new-products">
                            <i class="icon material-icons md-add_box"></i>
                            <span class="text">Add product</span>
                        </a>
                    </div>
                    <li class="menu-item">
                        <a class="menu-link" href="/admin/transaction">
                            <i class="icon material-icons md-monetization_on"></i>
                            <span class="text">Transactions</span>
                        </a>
                    </li>
                    <div class="menu-item">
                        <a class="menu-link" href="/">
                            <i class="icon material-icons md-person"></i>
                            <span class="text">User Login</span>
                        </a>
                    </div>
                    <div class="menu-item">
                        <a class="menu-link" href="/admin/reviews">
                            <i class="icon material-icons md-comment"></i>
                            <span class="text">Reviews</span>
                        </a>
                    </div>
                    <div class="menu-item">
                        <a class="menu-link" href="/admin/brands">
                            <i class="icon material-icons md-stars"></i>
                            <span class="text">Brands</span>
                        </a>
                    </div>
                </div>
                <hr>
                <br>
                <br>
            </nav>
        </aside>


        <main class="main-wrap">

            <%- include('./partials/header/header.ejs') %>
            <section class="content-main">
                <form action="/admin/add-new-products" enctype="multipart/form-data">
                    <div class="row">
                        <div class="col-9">
                            <div class="content-header">
                                <h2 class="content-title">Add New Product</h2>
                                <div>
                                    <button type="submit" class="btn btn-md rounded font-sm hover-up">Confirm</button>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="card mb-4">
                                <div class="card-header">
                                    <h4>Basic</h4>
                                </div>
                                <div class="card-body">
                                    <div class="mb-4">
                                        <label for="product_name" class="form-label">Product Name</label>
                                        <input type="text" placeholder="Type here" name="name" class="form-control" id="product_name">
                                    </div>
                                    <% if (category) { %>
                                        <div class="mb-4">
                                            <label for="product_category" class="form-label">Category
                                            </label>

                                            <select name="category" id="product_category" required>
                                                <% for( cate of category ) { %>

                                                    <option value="" selected disabled></option>
                                                    <option value="<%= cate.name %>"><%= cate.name %></option>
                                                <% } %>
                                            </select>
                                        </div>
                                    <% } %>
                                    <div class="mb-4">
                                        <label for="product_stock" class="form-label">Product Stock</label>
                                        <input type="text" placeholder="Type here" name="stock" class="form-control" id="product_stock">
                                    </div>
                                    <div class="mb-4">
                                        <label class="form-label">Full description</label>
                                        <textarea placeholder="Type here" class="form-control" name="description" id="product_description" rows="4"></textarea>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-4">
                                            <div class="mb-4">
                                                <label class="form-label">Regular price</label>
                                                <div class="row gx-2">
                                                    <input placeholder="$" type="text" name="price" id="product_price" class="form-control">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-4">
                                            <div class="mb-4">
                                                <label class="form-label">Promotional price</label>
                                                <input placeholder="$" type="text" class="form-control">
                                            </div>
                                        </div>
                                        <div class="col-lg-4">
                                            <label class="form-label">Currency</label>
                                            <select class="form-select">
                                                <option>
                                                    USD
                                                </option>
                                                <option>
                                                    EUR
                                                </option>
                                                <option>
                                                    RUBL
                                                </option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="card mb-4">
                                <div class="card-header">
                                    <h4>Product Image</h4>
                                </div>

                                <!-- <div class="card-body"> -->
                                <!-- <div class="input-upload"> -->
                                <input type="file" name="imageUrl" class="form-control" id="upload" accept="imageUrl/*" multiple>
                                <div id="image-preview" class="mt-3"></div>
                                <button id="upload-btn" type="button">Submit Cropped Images</button>


                                <!-- </div> -->
                                <!-- </div> -->

                            </div>
                        </div>
                    </div>
                </form>
<<<<<<< HEAD
                <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
                <!-- Include Cropper.js library -->
                <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
                <script>

                    // Define croppers array in the outer scope
                    var croppers = [];
                    console.log('inside script working or not ======================================================<>====================================');
                    document.getElementById('upload').addEventListener('change', function (event) {
                        console.log('some sort of error');
                        var files = event.target.files;
                        console.log(files, 'files are ===========================================================================================');
                        var imagePreview = document.getElementById('image-preview');
                        imagePreview.innerHTML = ''; // Clear previous previews
                        croppers = []; // Reset croppers array

                        for (var i = 0; i < files.length; i++) {
                            var file = files[i];

                            var reader = new FileReader();

                            reader.onload = (function (file) {
                                return function (e) {
                                    var previewContainer = document.createElement('div');
                                    previewContainer.className = 'preview-container';
                                    var img = document.createElement('img');
                                    img.src = e.target.result;
                                    previewContainer.appendChild(img);

                                    var removeBtn = document.createElement('button');
                                    removeBtn.textContent = 'X';
                                    removeBtn.className = 'remove-btn btn btn-danger';
                                    removeBtn.addEventListener('click', function () { // Remove the preview container when the remove button is clicked
                                        previewContainer.remove();

                                        // Filter out the removed file from croppers array
                                        croppers = croppers.filter(function (c) {
                                            return c.input !== file;
                                        });

                                        // Remove the corresponding file from the input selection
                                        var newFiles = Array.from(document.getElementById('upload').files).filter(function (f) {
                                            return f !== file;
                                        });
                                        document.getElementById('upload').files = new FileList(newFiles, 'files');
                                    });
                                    previewContainer.appendChild(removeBtn);

                                    imagePreview.appendChild(previewContainer);

                                    // Initialize Cropper for the current image
                                    var cropper = new Cropper(img, {
                                        aspectRatio: 1, // Adjust as needed for your fixed aspect ratio
                                        viewMode: 1, // Set to 1 for fixed size cropping
                                        autoCropArea: 1 // Set to 1 to always auto crop the entire image
                                    });

                                    // Store the Cropper instance and the associated input file
                                    croppers.push({cropper: cropper, input: file});
                                };
                            })(file);

                            reader.readAsDataURL(file);
                        }
                    });

                    document.getElementById('upload-btn').addEventListener('click', function () {
                        var croppedImages = [];
                        var imagePreview = document.getElementById('image-preview');
                        imagePreview.innerHTML = ''; // Clear previous previews

                        croppers.forEach(function (c) {
                            var croppedCanvas = c.cropper.getCroppedCanvas();
                            croppedCanvas.toBlob(function (blob) {
                                var croppedImg = document.createElement('img');
                                croppedImg.src = URL.createObjectURL(blob); // Set the src of the image to the blob URL
                                croppedImg.className = 'cropped-image';
                                // Add a class for styling if needed

                                // Append the cropped image to the image-preview div
                                imagePreview.appendChild(croppedImg);

                                // Store the blob in the croppedImages array for further processing if needed
                                croppedImages.push(blob);

                                if (croppedImages.length === croppers.length) { // Submit cropped images or perform further actions
                                    console.log("Cropped Images:is working or not ", croppedImages);
                                }
                            }, 'image/jpeg');
                        });
                    });
                </script>
            </body>
        </section>
        <%- include('./partials/footer/footer.ejs') %>
        <!-- Include Bootstrap JS -->
=======
            </section>
            <%- include('./partials/footer/footer.ejs') %>

            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
            <!-- Include Cropper.js library -->
            <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
            <script>

                // Define croppers array in the outer scope
                var croppers = [];
                console.log('inside script working or not ======================================================<>====================================');
                document.getElementById('upload').addEventListener('change', function (event) {
                    console.log('some sort of error');
                    var files = event.target.files;
                    console.log(files, 'files are ===========================================================================================');
                    var imagePreview = document.getElementById('image-preview');
                    imagePreview.innerHTML = ''; // Clear previous previews
                    croppers = []; // Reset croppers array

                    for (var i = 0; i < files.length; i++) {
                        var file = files[i];

                        var reader = new FileReader();

                        reader.onload = (function (file) {
                            return function (e) {
                                var previewContainer = document.createElement('div');
                                previewContainer.className = 'preview-container';
                                var img = document.createElement('img');
                                img.src = e.target.result;
                                previewContainer.appendChild(img);

                                var removeBtn = document.createElement('button');
                                removeBtn.textContent = 'X';
                                removeBtn.className = 'remove-btn btn btn-danger';
                                removeBtn.addEventListener('click', function () { // Remove the preview container when the remove button is clicked
                                    previewContainer.remove();

                                    // Filter out the removed file from croppers array
                                    croppers = croppers.filter(function (c) {
                                        return c.input !== file;
                                    });

                                    // Remove the corresponding file from the input selection
                                    var newFiles = Array.from(document.getElementById('upload').files).filter(function (f) {
                                        return f !== file;
                                    });
                                    document.getElementById('upload').files = new FileList(newFiles, 'files');
                                });
                                previewContainer.appendChild(removeBtn);

                                imagePreview.appendChild(previewContainer);

                                // Initialize Cropper for the current image
                                var cropper = new Cropper(img, {
                                    aspectRatio: 1, // Adjust as needed for your fixed aspect ratio
                                    viewMode: 1, // Set to 1 for fixed size cropping
                                    autoCropArea: 1 // Set to 1 to always auto crop the entire image
                                });

                                // Store the Cropper instance and the associated input file
                                croppers.push({cropper: cropper, input: file});
                            };
                        })(file);

                        reader.readAsDataURL(file);
                    }
                });

                document.getElementById('upload-btn').addEventListener('click', function () {
                    var croppedImages = [];
                    var imagePreview = document.getElementById('image-preview');
                    imagePreview.innerHTML = ''; // Clear previous previews

                    croppers.forEach(function (c) {
                        var croppedCanvas = c.cropper.getCroppedCanvas();
                        croppedCanvas.toBlob(function (blob) {
                            var croppedImg = document.createElement('img');
                            croppedImg.src = URL.createObjectURL(blob); // Set the src of the image to the blob URL
                            croppedImg.className = 'cropped-image';
                            // Add a class for styling if needed

                            // Append the cropped image to the image-preview div
                            imagePreview.appendChild(croppedImg);

                            // Store the blob in the croppedImages array for further processing if needed
                            croppedImages.push(blob);

                            if (croppedImages.length === croppers.length) { // Submit cropped images or perform further actions
                                console.log("Cropped Images:is working or not ", croppedImages);
                            }
                        }, 'image/jpeg');
                    });
                });
            </script>
            
<script>
    document.getElementById('upload-btn').addEventListener('click', function () {
        var formData = new FormData(); // Create a FormData object

        // Append the cropped images to the FormData object
        croppers.forEach(function (cropper, index) {
            var croppedCanvas = cropper.cropper.getCroppedCanvas();
            croppedCanvas.toBlob(function (blob) {
                formData.append('croppedImage' + index, blob, 'croppedImage' + index + '.jpg');
            }, 'image/jpeg');
        });

        // Append other form data to the FormData object if needed
        // For example:
        formData.append('name', document.getElementById('product_name').value);
        formData.append('category', document.getElementById('product_category').value);
        formData.append('stock', document.getElementById('product_stock').value);
        formData.append('description', document.getElementById('product_description').value);
        formData.append('price', document.getElementById('product_price').value); 

        // Submit the form with the FormData object
        var xhr = new XMLHttpRequest();
        xhr.open('POST', '/admin/add-new-products', true);
        xhr.onload = function () {
            if (xhr.status === 200) {
                console.log('Images uploaded successfully:', xhr.responseText);
            } else {
                console.error('Error uploading images:', xhr.statusText);
            }
        };
        xhr.send(formData);
    });
</script>

        </body>
>>>>>>> add-new-products
    </body>
</html>
