<!DOCTYPE html>
<html lang="en">

<%- include ('./partials/head/head.ejs' ) %>

	<body>


		<%- include('./partials/header/header.ejs') %>

			<!-- breadcrumb-section -->
			<div class="breadcrumb-section breadcrumb-bg">
				<div class="container">
					<div class="row">
						<div class="col-lg-8 offset-lg-2 text-center">
							<div class="breadcrumb-text">
								<p>Fresh and Organic</p>
								<h1>Cart</h1>
							</div>
						</div>
					</div>
				</div>
			</div>
			<!-- end breadcrumb section -->
			<% if (cart) { %>

				<!-- cart -->
				<div class="cart-section mt-150 mb-150">
					<div class="container">
						<div class="row">
							<div class="col-lg-8 col-md-12">
								<div class="cart-table-wrap">
									<table class="cart-table">
										<thead class="cart-table-head">
											<tr class="table-head-row">
												<th class="product-remove"></th>
												<th class="product-image">Product Image</th>
												<th class="product-name">Name</th>
												<th class="product-price">Price</th>
												<th class="product-quantity">Quantity</th>
												<th class="product-total">Total</th>
											</tr>
										</thead>
										<tbody>

											<% for( let i=0; i < cart.items.length; i++ ) { %>
												<input type="text" name="" value="<%= cart.items[i].productId.stock %>" hidden id="stock_<%= i %>">
												<tr class="table-body-row">
													<td class="product-remove"><button
															onclick="deleteCartProduct(`<%= cart.items[i].productId._id %>`)">
															<i class="far fa-window-close"></i></button></td>
													<td class="product-image"><img
															src="/product-images/<%= cart.items[i].productId.imageUrl[0] %>"
															alt="">
													</td>
													<td class="product-name">
														<%= cart.items[i].productId.name %>
													</td>
													<td class="product-price" id="price_<%= i %>">Rs <%=
															cart.items[i].productId.discount_price %>
													</td>
													<td class="product-quantity">
														<!-- <button onclick="increaseQuantity()">+</button> -->
														<input type="number" name="test" min="1" id="quantity_<%= i %>"
															value="<%= cart.items[i].quantity %>" placeholder="1"
															oninput="validity.valid||(value='');addtoCartUsingFetch(`<%= i %>`,`<%= cart.items[i].productId._id %>`)">
														<!-- <button onclick="decreaseQuantity()">-</button> -->
													</td>
													<td class="product-total" id="productTotal_<%= i %>">
														<%= cart.items[i].quantity * cart.items[i].productId.discount_price %>
													</td>
												</tr>
												<% } %>

										</tbody>
									</table>
								</div>
							</div>

							<div class="col-lg-4">
								<div class="total-section">
									<table class="total-table">
										<thead class="total-table-head">
											<tr class="table-total-row">
												<th>Total</th>
												<th>Price</th>
											</tr>
										</thead>
										<tbody>
											<tr class="total-data">
												<td><strong>Subtotal: </strong></td>
												<td id="totalPrice">
													<%= cart.totalPrice %>
												</td>
											</tr>
											<tr class="total-data">
												<td><strong>Shipping: </strong></td>
												<td>$45</td>
											</tr>
											<tr class="total-data">
												<td><strong>Total: </strong></td>
												<td>$545</td>
											</tr>
										</tbody>
									</table>
									<div class="cart-buttons">
										<a href="/checkout" class="boxed-btn black">Check Out</a>
									</div>
								</div>

								<div class="coupon-section">
									<h3>Apply Coupon</h3>
									<div class="coupon-form-wrap">
											<p><input type="text" placeholder="Coupon" id="couponCode"></p>
											<p><input value="Apply" type="submit" onclick="applyCoupon()"></p>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<!-- end cart -->
				<% }else{ %>

					<style>
						/* Custom CSS for styling */
						.empty-cart {
							margin-top: 50px;
							text-align: center;
						}

						.empty-cart h2 {
							color: #333;
						}

						.empty-cart a {
							color: #007bff;
							text-decoration: none;
						}

						.empty-cart a:hover {
							text-decoration: underline;
						}
					</style>
					<div class="container">
						<div class="empty-cart">
							<h2>Your cart is empty</h2>
							<p>Continue shopping <a href="/shop">here</a>.</p>
						</div>
					</div>


					<!-- end cart -->>
					<% } %>

						<%- include('./partials/footer/footer.ejs') %>

	</body>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

	<script>
		async function applyCoupon(){
			const couponCode = document.getElementById('couponCode').value
			const totalCartPriceData = document.getElementById('totalPrice')
			const totalCartPrice = Number(totalCartPriceData.innerHTML)
			console.log(totalCartPrice,'totalcart price is showing');
			const response = await fetch(`/apply-coupon/?couponCode=${couponCode}&totalCartPrice=${totalCartPrice}`,{
				method:'GET',
				headers:{
					'Content-Type':'application/json'
				}
			})
			.then(response=>{
				if(!response.ok){
					throw new Error('Some error occured while fetching')
				}
				return response.json()
			})
			.then(data=>{
				if(data.result==='Invalid Coupon'){
					Swal.fire('Invalid Coupon')
				}
				else if (data.result === 'Cart Limit Is Low'){
					Swal.fire('Minimum cart price to apply coupon is 1000')
				}else if (data.result === 'Coupon Applied'){
					Swal.fire('Coupon Applied Successfully')
					const discount = Number(data.discount)
					console.log(discount,'discount is showing');
					totalCartPriceData.innerHTML = totalCartPrice - (totalCartPrice * (discount/100))

				}else if (data.result === 'Coupon Already Exist'){
					Swal.fire('Coupon already used please apply another coupon')
				}
			})
		}
	</script>

	<script>
		
		async function addtoCartUsingFetch(index, productId) {

			console.log(index, 'index is not changing');
			const quantityTypeString = document.getElementById('quantity_' + index)
			const quantityValue = quantityTypeString.value
			const quantity = Number(quantityValue)
			console.log(quantity, 'quantity of each product is getting');
			const priceText = document.getElementById('price_'+index).innerHTML 
			const price = priceText.replace(/Rs/gi,'')
			console.log(price,'price of each product is showing');

			const stockTypeString = document.getElementById('stock_' + index).value 
			const stock = Number(stockTypeString)
			console.log(stock,'stock is showing',quantity,'quanitity is showing'); 
			console.log(typeof quantity,'what is heppeing');
			console.log(typeof stock,'what the h');
			console.log(quantity<=stock,'what is happening');
			console.log(2<=12,'what is the issue');
			if(quantity<=stock){
				
			
			 quantity <= 10 ? await fetch(`/add-to-cart-manage/?productId=${productId}&quantity=${quantity}`, {
				method: 'GET',
				headers: {
					'Content-Type': 'application/json'
				}
			}).then(response =>response.ok ? response.json() : console.log('Some network error occured while fetching'))
				.then(
					data => {
						console.log(data)
						console.log(data.totalPrice[0].totalPrice,'total price is showing ');
						console.log(data.quantityFromUpdatedData[0].quantity,'quantity of product is showing ');
						data.result === 'within limit' ?
							Swal.fire({
								position: "center",
								icon: "success",
								title: "Successfully product added to cart",
								showConfirmButton: false,
								timer: 1500
							}).then(() => {
								document.getElementById('totalPrice').innerHTML = data.totalPrice[0].totalPrice
								document.getElementById('productTotal_'+ index).innerHTML = data.quantityFromUpdatedData[0].quantity * price
								// location.reload()
							}) : Swal.fire({
								position: "center",
								icon: "error",
								title: "Maximum product limit is exceeded",
								showConfirmButton: false,
								timer: 1500
							})
					})
				.catch(err => {
					console.log(err, 'Some error occured while fetching in cart page');
				}) : Swal.fire({
					position: "center",
					icon: "error",
					title: "Maximum product limit is exceeded",
					showConfirmButton: false,
					timer: 1500
				}).then(()=>{
					if(stock<=10){
						quantityTypeString.value = stock
					}else{
						quantityTypeString.value = 10
					}
				})
				
			}else{
				Swal.fire({
					position: "center",
					icon: "error",
					title: "Maximum stock limit of product exceeded",
					showConfirmButton: false,
					timer: 1500
				}).then(()=>{
					quantityTypeString.value = stock
				})
			}
		}




	</script>
	<script>

		async function deleteCartProduct(productId) {
			Swal.fire({
				title: "Are you sure?",
				text: "You won't be able to revert this!",
				icon: "warning",
				showCancelButton: true,
				confirmButtonColor: "#3085d6",
				cancelButtonColor: "#d33",
				confirmButtonText: "Yes, Delete it!"
			}).then((result) => {
				if (result.isConfirmed) {
					checkingSwal(productId)
				}
			})

		}

		async function checkingSwal(productId) {
			console.log(productId);
			await fetch(`/delete-cart-product/?productId=${productId}`, {
				method: 'DELETE',
				headers: {
					'Content-Type': 'application/json'
				}
			}).then(response => response.ok ? response.json() : console.log('some network failure occured while using fetch'))
				.then(data => data.result === 'success' ?
					Swal.fire({
						title: "Deleted!",
						text: "Product has been deleted successfully.",
						icon: "success"
					}) : 'some error occured').then(() => {
						location.reload()
					}).catch(err => console.log('some error occured while try to delte using fetch',err))
		}
	</script>

</html>