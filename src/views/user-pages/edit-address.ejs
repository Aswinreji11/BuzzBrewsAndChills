<style>
    .mainDiv {
        display: flex;

        align-items: center;
        justify-content: center;
        background-color: #cac2c2;
        font-family: 'Open Sans', sans-serif;
        padding: 20px;
    }


    input,
    label {
        margin: 5px 5px;
        padding: 10px;
        border: 1px solid #fff;
        border-radius: 5px;
        width: 100%;
        box-sizing: border-box;
    }

    input:focus {
        outline: none;
        border-color: #007bff;
    }

    .form-group {
        margin: 30px auto;
        width: 450px;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    #autocomplete {
        background-color: #ffffff;
        color: #fff;
    }

    #inputStreet,
    #inputCity,
    #inputState,
    #inputZip,
    #inputCounty,
    #inputCountry {
        width: 100%;
    }

    @media (max-width: 768px) {
        .form-group {
            width: 90%;
        }
    }

    /* Your existing styles */

    .form-control {
        margin-bottom: 10px;
        /* Adjust as needed */
        padding: 10px;
        /* Adjust as needed */
        border: 1px solid #fff;
        border-radius: 5px;
        width: 100%;
        box-sizing: border-box;
    }

    /* Ensure there's no double margin for the last input */
    .form-group .form-control:last-child {
        margin-bottom: 0;
    }
</style>
<%- include ('partials/head/head.ejs' ) %>

    <body>
        <%- include('partials/header/header.ejs') %>
            <!-- breadcrumb-section -->
            <div class="breadcrumb-section breadcrumb-bg">
                <div class="container">
                    <div class="row">
                        <div class="col-lg-8 offset-lg-2 text-center">
                            <div class="breadcrumb-text">
                                <p>Fresh and Organic</p>
                                <h1>Edit Address</h1>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <h4><a href="/add-address">Add New Address</a></h4>
            <% if (user.addresses.length>0) { %>
                <form action="/edit-address/?id=<%= user.addresses[0]._id %>" method="post">
                    <div class="mainDiv">
                        <div class="form-group">
                                <h5 for="">Name </h5>
                            <input type="text" class="form-control" value="<%= user.addresses[0].name %>" name="name"
                                id="inputState" placeholder="Name">
                            <br>
                            <h5 for="">Phone Number</h5>
                            <input type="text" class="form-control" value="<%= user.addresses[0].phoneNumber %>" name="phoneNumber"
                                id="inputState" placeholder="Phone Number">
                            <br>
                            <h5 for="">Home Address</h5>
                            <input type="text" class="form-control" value="<%= user.addresses[0].homeAddress %>" id="" name="homeAddress"
                                placeholder="Home Address">
                            <br>
                            <h5>City</h5>
                            <input type="city" class="form-control" value="<%= user.addresses[0].city %>" name="city"
                                id="inputCity" placeholder="City">
                            <br>
                            <H5>Zip</H5>
                            <input type="zip" class="form-control" id="inputZip" placeholder="Zip">
                            <br>
                            <h5>Country</h5>
                            <input type="country" class="form-control" value="<%= user.addresses[0].country %>" name="country"
                                id="inputCountry" placeholder="Country">
                                <button type="submit" class="btn btn-success">Submit</button>
                        </div>
                    </div>
                </form>
                <% }else{ %>
                    <div class="mainDiv">

                        <h3>No Addresses Found Kindly add an address</h3>
                    </div>
                    <% } %>
                        <%- include('./partials/footer/footer.ejs') %>
    </body>
    <!-- <script>
        let placeSearch, autocomplete;

        // List all address components (corresponds to form field IDs and Google address object)
        let componentForm = {
            autocomplete: ['street_number', 'route'],
            inputCity: 'locality',
            inputState: 'administrative_area_level_1',
            inputZip: 'postal_code',
            inputCounty: 'administrative_area_level_2',
            inputCountry: 'country'
        };

        // Create autocomplete object based on the autocomplete ("street") field
        // Location type restricted to geocode
        function initAutocomplete() {
            autocomplete = new google.maps.places.Autocomplete(
      /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
                { type: ['geocode'] });

            // Call fillInAddress when user selects an address from dropdown
            autocomplete.addListener('place_changed', fillInAddress);
        }

        // Fill fields with values from Google Maps autocomplete object
        function fillInAddress() {

            // Get place data from autocomplete object
            var place = autocomplete.getPlace();
            console.log(place);

            // Enable each field, then fill them with the corresponding value from the place object
            for (var component in componentForm) {
                document.getElementById(component).disabled = false;
                document.getElementById(component).value = search(componentForm[component], place.address_components);
            }

            // Original Google Implementation - do not use
            // Get each component of the address from the place
            // object and fill the corresponding field
            //   for (var i = 0; i < place.address_components.length; i++) {

            //     var addressType = place.address_components[i].types[0];

            //     if (componentForm[addressType]) {
            //       var val = place.address_components[i][componentForm[addressType]];
            //       document.getElementById(addressType).value = val;
            //     }
            //   }

            // Fill the autocomplete field with values from the place object
            // If a street number is not found, set the field to route only.
            if (search("street_number", place.address_components) != "") {
                document.getElementById("autocomplete").value = search("street_number", place.address_components) + " ";
            }
            document.getElementById("autocomplete").value += search("route", place.address_components);

            // Search the passed object for a specified address component/type and return the short_name value of the matched component/type
            // If requested type does not exist in the placeObject, return an empty string
            function search(type, placeObject) {
                for (var i = 0; i < placeObject.length; i++) {
                    if (placeObject[i].types[0] === type) {
                        return placeObject[i].short_name;
                    } else if (i === placeObject.length - 1) {
                        return "";
                    }
                }
            }
        }

    </script> -->