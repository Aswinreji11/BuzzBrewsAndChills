<style>
    .mainDiv {
        display: flex;
        min-height: 100%;
        align-items: center;
        justify-content: center;
        background-color: #0f0f0f;
        font-family: 'Open Sans', sans-serif;
    }

    .cardStyle {
        width: 500px;
        border-color: white;
        background: #fff;
        padding: 36px 0;
        border-radius: 4px;
        margin: 30px 0;
        box-shadow: 0px 0 2px 0 rgba(0, 0, 0, 0.25);
    }

    #signupLogo {
        max-height: 100px;
        margin: auto;
        display: flex;
        flex-direction: column;
    }

    .formTitle {
        font-weight: 600;
        margin-top: 20px;
        color: #2F2D3B;
        text-align: center;
    }

    .inputLabel {
        font-size: 12px;
        color: #555;
        margin-bottom: 6px;
        margin-top: 24px;
    }

    .inputDiv {
        width: 70%;
        display: flex;
        flex-direction: column;
        margin: auto;
    }

    input {
        height: 40px;
        font-size: 16px;
        border-radius: 4px;
        border: none;
        border: solid 1px #ccc;
        padding: 0 11px;
    }

    input:disabled {
        cursor: not-allowed;
        border: solid 1px #eee;
    }

    .buttonWrapper {
        margin-top: 40px;
    }

    .submitButton {
        width: 70%;
        height: 40px;
        margin: auto;
        display: block;
        color: #fff;
        background-color: #065492;
        border-color: #065492;
        text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.12);
        box-shadow: 0 2px 0 rgba(0, 0, 0, 0.035);
        border-radius: 4px;
        font-size: 14px;
        cursor: pointer;
    }

    .submitButton:disabled,
    button[disabled] {
        border: 1px solid #cccccc;
        background-color: #cccccc;
        color: #666666;
    }

    #loader {
        position: absolute;
        z-index: 1;
        margin: -2px 0 0 10px;
        border: 4px solid #f3f3f3;
        border-radius: 50%;
        border-top: 4px solid #666666;
        width: 14px;
        height: 14px;
        -webkit-animation: spin 2s linear infinite;
        animation: spin 2s linear infinite;
    }

    @keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
</style>
<%- include ('../partials/head/head.ejs' ) %>

    <body>

        <%- include('../partials/header/header.ejs') %>

            <!-- breadcrumb-section -->
            <div class="breadcrumb-section breadcrumb-bg">
                <div class="container">
                    <div class="row">
                        <div class="col-lg-8 offset-lg-2 text-center">
                            <div class="breadcrumb-text">
                                <p>Fresh and Organic</p>
                                <h1>Change Password</h1>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- end breadcrumb section -->

            <div class="mainDiv">
                <div class="cardStyle">
                    <form action="/set-new-password" method="post" name="signupForm" id="signupForm">

                        <img src="" id="signupLogo" />

                        <h2 class="formTitle">
                            Change your password
                        </h2>
                        <div class="inputDiv">
                            <label class="inputLabel" for="password">Old Password</label>
                            <input type="password" oninput="oldPasswordCheck(this.value)" id="oldPassword" required>
                            <span id="oldPass"></span>
                        </div>
                        <div class="inputDiv">
                            <span id="error">
                                <%= error %>
                            </span>
                            <label class="inputLabel" for="password">New Password</label>
                            <input type="password" oninput="comparingOldAndNew(this.value)" id="password"
                                name="password" required>
                        </div>
                        <br>
                        <div class="inputDiv">
                            <span id="pass" class="p"></span>
                            <span id="comparePass" class="p"></span>
                            <label class="inputLabel" for="confirmPassword">Confirm Password</label>
                            <input type="password" id="confirmPassword" name="confirmPassword">
                        </div>


                        <div class="buttonWrapper">

                            <button type="submit" id="submitButton" class="submitButton pure-button pure-button-primary"
                                disabled>
                                <span>Continue</span>
                                <span id="loader"></span>
                            </button>
                        </div>

                    </form>
                </div>
            </div>
            <%- include('../partials/footer/footer.ejs') %>
    </body>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>


    <script>
        let comparePassBoolean = false;
        let checkPass = false;
        let oldPass = false;

        document.getElementById('signupLogo').src = "https://s3-us-west-2.amazonaws.com/shipsy-public-assets/shipsy/SHIPSY_LOGO_BIRD_BLUE.png";
        console.log(comparePassBoolean, 'Boolean is');
        let password = document.getElementById("password");
        let confirm_password = document.getElementById("confirmPassword");
        let submitButton = document.getElementById('submitButton');
        let form = document.getElementById('signupForm');

        password.onchange = validatePassword;
        confirm_password.onkeyup = validatePassword;
        form.oninput = validateForm;

        function validatePassword() {
            if (password.value !== confirm_password.value) {
                document.getElementById('pass').innerHTML = "Passwords do not match.";
                checkPass = false;
            } else {
                checkPass = true;
                document.getElementById('pass').innerHTML = "";
            }
            enableSubmitButtonIfValid();
        }

        function validateForm() {
            let allFieldsFilled = true;
            for (let i = 0; i < form.elements.length; i++) {
                if (form.elements[i].hasAttribute('required') && form.elements[i].value === '') {
                    allFieldsFilled = false;
                    break;
                }
            }
            if (allFieldsFilled && validatePassword()) {
                submitButton.disabled = false;
                document.getElementById('loader').style.display = 'none';
            } else {
                submitButton.disabled = true;
            }
        }

        async function oldPasswordCheck(oldPassword) {
            disableSubmitButton();
            console.log(oldPassword, 'Old password is being checked');
            const response = await fetch(`/set-new-password?oldPassword=${oldPassword}`, { method: 'POST' });
            console.log(response, 'Response is received');

            if (!response.ok) {
                throw new Error('Network error occurred while checking the old password.');
            }

            const data = await response.json();
            console.log(data, 'Data is received');

            if (data.oldPassword) {
                oldPass = true;
                document.getElementById('oldPass').innerHTML = 'Old password is correct.';
            } else {
                oldPass = false;
                document.getElementById('oldPass').innerHTML = 'Old password is incorrect.';
            }
            enableSubmitButtonIfValid();
        }

        async function comparingOldAndNew(newPassword) {
            const response = await fetch(`/set-new-password?comparingPass=${newPassword}`, { method: 'POST' });
            console.log(response, 'Response is received');

            if (!response.ok) {
                throw new Error('Network error occurred while comparing passwords.');
            }

            const data = await response.json();
            console.log(data, 'Data is received');

            if (data.comparingOldAndNewPass) {
                comparePassBoolean = false;
                document.getElementById('comparePass').innerHTML = 'New password cannot be the same as the old password.';
            } else {
                comparePassBoolean = true;
                document.getElementById('comparePass').innerHTML = '';
            }
            enableSubmitButtonIfValid();
        }

        function enableSubmitButtonIfValid() {
            if (comparePassBoolean && checkPass && oldPass) {
                console.log('All conditions met, enabling submit button.');
                submitButton.disabled = false;
                document.getElementById('loader').style.display = 'none';
            } else {
                console.log('Conditions not met, disabling submit button.');
                disableSubmitButton()
            }
        }

        function enableSubmitButton() {
            submitButton.disabled = false;
            document.getElementById('loader').style.display = 'none';
        }

        function disableSubmitButton() {
            submitButton.disabled = true;
            document.getElementById('loader').style.display = 'unset';
        }

    </script>